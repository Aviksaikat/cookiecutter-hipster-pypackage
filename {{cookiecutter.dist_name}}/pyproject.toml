[tool.ruff]
extend-select = ["I"]

[tool.pytest.ini_options]
addopts = "--cov={{ cookiecutter.package_name }}/ --cov-report=term-missing"
asyncio_mode = "strict"

[tool.hatch]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
source = "regex_commit"
commit_extra_args = ["-e"]
path = "{{ cookiecutter.package_name }}/__init__.py"

[tool.hatch.envs.default]
dependencies = [
    "black",
    "mypy",
    "ruff",
    "pytest",
    "pytest-cov",
    "mkdocs-material",
    "mkdocstrings[python]",
]

[tool.hatch.envs.default.scripts]
test = "pytest"
test-cov-xml = "pytest --cov-report=xml"
lint = [
  "black .",
  "ruff --fix .",
  "mypy {{ cookiecutter.package_name }}/",
]
lint-check = [
  "black --check .",
  "ruff .",
  "mypy {{ cookiecutter.package_name }}/",
]
docs-serve = "mkdocs serve"
docs-build = "mkdocs build"

[build-system]
requires = ["hatchling", "hatch-regex-commit"]
build-backend = "hatchling.build"

[project]
name = "{{ cookiecutter.dist_name }}"
authors = [
  { name = "{{ cookiecutter.dist_name }}", email = "{{ cookiecutter.email }}" }
]
description = "{{ cookiecutter.project_short_description }}"
readme = "README.md"
dynamic = ["version"]
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
]
requires-python = ">=3.7"
dependencies = [
]

[project.urls]
Documentation = "{{ cookiecutter.docs_url }}"
Source = "{{ cookiecutter.repository_url }}"
